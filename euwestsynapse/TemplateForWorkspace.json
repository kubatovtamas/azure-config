{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "euwestsynapse"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"euwestsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'euwestsynapse-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:euwestsynapse.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kubastorage.dfs.core.windows.net/"
		},
		"euwestsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kubastorage.dfs.core.windows.net"
		},
		"TriggerZipCreated_properties_ProcessingPipeline_v1_parameters_sourceFileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"TriggerZipCreated_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/7a27c1f7-9a3b-4cd7-9dc2-c164affa0563/resourceGroups/EU_West_RG/providers/Microsoft.Storage/storageAccounts/kubastorage"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/sparkpoolsmall')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ProcessingPipeline_v1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "UnzipToCSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetFileNameNoExtension",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ZippedData",
								"type": "DatasetReference",
								"parameters": {
									"sourceFileName": {
										"value": "@pipeline().parameters.sourceFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UnzippedData",
								"type": "DatasetReference",
								"parameters": {
									"fileNameNoExtensionVar": "@variables('fileNameNoExtension')"
								}
							}
						]
					},
					{
						"name": "CSVToParquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UnzipToCSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "policyID",
											"type": "Int64",
											"physicalType": "String"
										},
										"sink": {
											"name": "policyID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statecode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "county",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "county",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "eq_site_limit",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "eq_site_limit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "hu_site_limit",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "hu_site_limit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "fl_site_limit",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "fl_site_limit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "fr_site_limit",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "fr_site_limit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "tiv_2011",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "tiv_2011",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "tiv_2012",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "tiv_2012",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "eq_site_deductible",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "eq_site_deductible",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "hu_site_deductible",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "hu_site_deductible",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "fl_site_deductible",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "fl_site_deductible",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "fr_site_deductible",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "fr_site_deductible",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "point_latitude",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "point_latitude",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "point_longitude",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "point_longitude",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "line",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "line",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "construction",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "construction",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "point_granularity",
											"type": "Int64",
											"physicalType": "String"
										},
										"sink": {
											"name": "point_granularity",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSVData",
								"type": "DatasetReference",
								"parameters": {
									"fileNameNoExtensionVar": "@variables('fileNameNoExtension')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ParquetData",
								"type": "DatasetReference",
								"parameters": {
									"fileNameNoExtensionVar": "@variables('fileNameNoExtension')"
								}
							}
						]
					},
					{
						"name": "SetFileNameNoExtension",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileNameNoExtension",
							"value": {
								"value": "@first(split(pipeline().parameters.sourceFileName, '.'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourceFileName": {
						"type": "string"
					}
				},
				"variables": {
					"fileNameNoExtension": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-18T06:01:47Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ZippedData')]",
				"[concat(variables('workspaceId'), '/datasets/UnzippedData')]",
				"[concat(variables('workspaceId'), '/datasets/CSVData')]",
				"[concat(variables('workspaceId'), '/datasets/ParquetData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSVData')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "euwestsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileNameNoExtensionVar": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().fileNameNoExtensionVar, '.csv')",
							"type": "Expression"
						},
						"folderPath": "bronze/staging",
						"fileSystem": "test-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "policyID",
						"type": "String"
					},
					{
						"name": "statecode",
						"type": "String"
					},
					{
						"name": "county",
						"type": "String"
					},
					{
						"name": "eq_site_limit",
						"type": "String"
					},
					{
						"name": "hu_site_limit",
						"type": "String"
					},
					{
						"name": "fl_site_limit",
						"type": "String"
					},
					{
						"name": "fr_site_limit",
						"type": "String"
					},
					{
						"name": "tiv_2011",
						"type": "String"
					},
					{
						"name": "tiv_2012",
						"type": "String"
					},
					{
						"name": "eq_site_deductible",
						"type": "String"
					},
					{
						"name": "hu_site_deductible",
						"type": "String"
					},
					{
						"name": "fl_site_deductible",
						"type": "String"
					},
					{
						"name": "fr_site_deductible",
						"type": "String"
					},
					{
						"name": "point_latitude",
						"type": "String"
					},
					{
						"name": "point_longitude",
						"type": "String"
					},
					{
						"name": "line",
						"type": "String"
					},
					{
						"name": "construction",
						"type": "String"
					},
					{
						"name": "point_granularity",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/euwestsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ParquetData')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "euwestsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileNameNoExtensionVar": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "silver",
							"type": "Expression"
						},
						"fileSystem": "test-container"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/euwestsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UnzippedData')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "euwestsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileNameNoExtensionVar": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().fileNameNoExtensionVar, '.csv')",
							"type": "Expression"
						},
						"folderPath": "bronze/staging",
						"fileSystem": "test-container"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/euwestsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ZippedData')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "euwestsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sourceFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().sourceFileName",
							"type": "Expression"
						},
						"folderPath": "bronze",
						"fileSystem": "test-container"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/euwestsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/euwestsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('euwestsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/euwestsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('euwestsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TriggerZipCreated')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ProcessingPipeline_v1",
							"type": "PipelineReference"
						},
						"parameters": {
							"sourceFileName": "[parameters('TriggerZipCreated_properties_ProcessingPipeline_v1_parameters_sourceFileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/test-container/blobs/bronze/",
					"blobPathEndsWith": ".zip",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TriggerZipCreated_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/ProcessingPipeline_v1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSVtoParquet')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSVData",
								"type": "DatasetReference"
							},
							"name": "CSVsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ParquetData",
								"type": "DatasetReference"
							},
							"name": "Parquetsink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          policyID as string,",
						"          statecode as string,",
						"          county as string,",
						"          eq_site_limit as string,",
						"          hu_site_limit as string,",
						"          fl_site_limit as string,",
						"          fr_site_limit as string,",
						"          tiv_2011 as string,",
						"          tiv_2012 as string,",
						"          eq_site_deductible as string,",
						"          hu_site_deductible as string,",
						"          fl_site_deductible as string,",
						"          fr_site_deductible as string,",
						"          point_latitude as string,",
						"          point_longitude as string,",
						"          line as string,",
						"          construction as string,",
						"          point_granularity as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CSVsource",
						"CSVsource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Parquetsink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/CSVData')]",
				"[concat(variables('workspaceId'), '/datasets/ParquetData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "97ad74f6-5244-463d-8197-79d509fa6089"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": []
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparkpoolsmall')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": true,
				"annotations": []
			},
			"dependsOn": [],
			"location": "westeurope"
		}
	]
}